@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700,800&display=swap");@import url("https://fonts.googleapis.com/css?family=Poiret+One|Quicksand&display=swap");.svelte-1m8r81v.svelte-1m8r81v{margin:0;padding:0}@media print{@page{size:8.5in 12in}}.resumeBody.svelte-1m8r81v.svelte-1m8r81v{display:flex;position:fixed;width:100vw;height:100%;justify-content:center;align-items:flex-start;padding:0;background:#e8eff3}.resumeBody.svelte-1m8r81v a.svelte-1m8r81v:link,.resumeBody.svelte-1m8r81v a.svelte-1m8r81v:visited{text-decoration:none}.resumeCanvas.svelte-1m8r81v.svelte-1m8r81v{box-sizing:border-box;padding:0.3in;width:8.5in;height:12in;background-color:#faffff;box-shadow:0 3px 8px -3px rgba(0, 0, 0, 0.7)}.resumeCanvas.svelte-1m8r81v .gridParent.svelte-1m8r81v{width:100%;height:100%;display:grid;grid-template-columns:repeat(4, 1fr) 255px;grid-template-rows:repeat(5, 1fr);grid-column-gap:0px;grid-row-gap:0px}.resumeCanvas.svelte-1m8r81v .titleHeader.svelte-1m8r81v{grid-area:1 / 1 / 2 / 6;display:flex;flex-direction:column;justify-content:center;border-bottom:#2d0081 1px solid}.resumeCanvas.svelte-1m8r81v .titleHeader .red1.svelte-1m8r81v:hover{color:#e40303}.resumeCanvas.svelte-1m8r81v .titleHeader .orange2.svelte-1m8r81v:hover{color:darkorange}.resumeCanvas.svelte-1m8r81v .titleHeader .yellow3.svelte-1m8r81v:hover{color:#ffed00}.resumeCanvas.svelte-1m8r81v .titleHeader .green4.svelte-1m8r81v:hover{color:#008026}.resumeCanvas.svelte-1m8r81v .titleHeader .blue5.svelte-1m8r81v:hover{color:#004dff}.resumeCanvas.svelte-1m8r81v .titleHeader .purple6.svelte-1m8r81v:hover{color:#750787}.resumeCanvas.svelte-1m8r81v .titleHeader h1.svelte-1m8r81v{font-family:"Poiret One", cursive;font-size:100px;padding-left:20px;color:#14003d}.resumeCanvas.svelte-1m8r81v .titleHeader a.svelte-1m8r81v{color:#14003d}.resumeCanvas.svelte-1m8r81v .leftSummary.svelte-1m8r81v{grid-area:2 / 1 / 6 / 5;display:flex;flex-direction:column;justify-content:space-evenly;border-right:#2d0081 1px solid;font-family:"Quicksand", sans-serif;color:black}.resumeCanvas.svelte-1m8r81v .leftSummary h1.svelte-1m8r81v{margin:5px 0 5px 0;font-family:"Poiret One", cursive;font-size:30px;color:#14003d}.resumeCanvas.svelte-1m8r81v .leftSummary h4.svelte-1m8r81v{margin-bottom:5px;text-decoration:underline}.resumeCanvas.svelte-1m8r81v .leftSummary h5.svelte-1m8r81v{font-style:italic}.resumeCanvas.svelte-1m8r81v .leftSummary p.svelte-1m8r81v{font-size:15px;margin:5px}.resumeCanvas.svelte-1m8r81v .rightInfo.svelte-1m8r81v{grid-area:2 / 5 / 6 / 6;display:flex;flex-direction:column;justify-content:space-evenly;margin-left:3px;font-size:16px;font-family:"Quicksand", sans-serif}.resumeCanvas.svelte-1m8r81v .rightInfo .red1.svelte-1m8r81v:hover{color:#e40303}.resumeCanvas.svelte-1m8r81v .rightInfo .orange2.svelte-1m8r81v:hover{color:darkorange}.resumeCanvas.svelte-1m8r81v .rightInfo .yellow3.svelte-1m8r81v:hover{color:#ffed00}.resumeCanvas.svelte-1m8r81v .rightInfo .green4.svelte-1m8r81v:hover{color:#008026}.resumeCanvas.svelte-1m8r81v .rightInfo .blue5.svelte-1m8r81v:hover{color:#004dff}.resumeCanvas.svelte-1m8r81v .rightInfo .purple6.svelte-1m8r81v:hover{color:#750787}.resumeCanvas.svelte-1m8r81v .rightInfo h1.svelte-1m8r81v{text-align:right;font-family:"Poiret One", cursive;font-size:30px;color:#14003d}.resumeCanvas.svelte-1m8r81v .rightInfo p.svelte-1m8r81v{margin:10px}.resumeCanvas.svelte-1m8r81v .rightInfo a.svelte-1m8r81v:link,.resumeCanvas.svelte-1m8r81v .rightInfo a.svelte-1m8r81v:visited{color:black}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */