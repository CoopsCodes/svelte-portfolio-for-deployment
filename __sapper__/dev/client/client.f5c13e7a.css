nav.svelte-1g5jpej{position:fixed;top:0;width:100vw;background:#e8eff3b7}ul.svelte-1g5jpej{margin:0;padding:0}ul.svelte-1g5jpej::after{content:"";display:block;clear:both}li.svelte-1g5jpej{display:block;float:left}.selected.svelte-1g5jpej{position:relative;display:inline-block}.selected.svelte-1g5jpej::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:#be025b;display:block;bottom:-1px}a.svelte-1g5jpej{text-decoration:none;padding:1em 0.5em;display:block;font-family:"Montserrat", sans-serif}
.fa-icon.svelte-yk80ke{display:inline-block;fill:currentColor}.fa-flip-horizontal.svelte-yk80ke{transform:scale(-1, 1)}.fa-flip-vertical.svelte-yk80ke{transform:scale(1, -1)}.fa-spin.svelte-yk80ke{-webkit-animation:svelte-yk80ke-fa-spin 1s 0s infinite linear;animation:svelte-yk80ke-fa-spin 1s 0s infinite linear}.fa-inverse.svelte-yk80ke{color:#fff}.fa-pulse.svelte-yk80ke{-webkit-animation:svelte-yk80ke-fa-spin 1s infinite steps(8);animation:svelte-yk80ke-fa-spin 1s infinite steps(8)}@-webkit-keyframes svelte-yk80ke-fa-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes svelte-yk80ke-fa-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.svelte-1kcmrfx.svelte-1kcmrfx{margin:0;padding:0}footer.svelte-1kcmrfx.svelte-1kcmrfx{position:fixed;bottom:0;height:70px;width:100%}.iconContainer.svelte-1kcmrfx.svelte-1kcmrfx{display:flex;width:100vw;height:100%;justify-content:space-evenly;align-items:center;transition:all 0.2s ease-in-out}.iconContainer.svelte-1kcmrfx.svelte-1kcmrfx:hover{background:#e8eff3b7}.iconStyles.svelte-1kcmrfx.svelte-1kcmrfx{transition:all 0.2s ease-in-out;color:#be025b}.iconStyles.svelte-1kcmrfx:link .svelte-1kcmrfx:visited{color:#be025b}.iconStyles.svelte-1kcmrfx.svelte-1kcmrfx:hover{transform:scale(2)}
h1.svelte-1hjjbzs,p.svelte-1hjjbzs{margin:0 auto}h1.svelte-1hjjbzs{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-1hjjbzs{margin:1em auto}@media(min-width: 480px){h1.svelte-1hjjbzs{font-size:4em}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */