h1.svelte-1hjjbzs,p.svelte-1hjjbzs{margin:0 auto}h1.svelte-1hjjbzs{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-1hjjbzs{margin:1em auto}@media(min-width: 480px){h1.svelte-1hjjbzs{font-size:4em}}
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700,800&display=swap");@import url("https://fonts.googleapis.com/css?family=Poiret+One|Quicksand&display=swap");.svelte-qn347i{margin:0;padding:0;font-family:"Quicksand", sans-serif}canvas.svelte-qn347i{width:100vw;height:100vh;background:#e8eff3;position:absolute;left:0;top:0;z-index:-1}body.svelte-qn347i{display:grid;place-items:center;height:100vh;width:100vw}.main.svelte-qn347i{display:flex;flex-direction:column;justify-content:space-evenly;align-items:flex-start;padding:5%;width:70vw;height:70vh;font-size:1em;background:#e8eff3c5;border-radius:20%}p.svelte-qn347i{--minFontSize:16px;--maxFontSize:30px;--scaler:10vw;font-size:clamp(var(--minFontSize), var(--scaler), var(--maxFontSize))}
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700,800&display=swap");@import url("https://fonts.googleapis.com/css?family=Poiret+One|Quicksand&display=swap");.svelte-2odk4l.svelte-2odk4l{margin:0;padding:0}.formContainer.svelte-2odk4l.svelte-2odk4l{display:flex;flex-direction:column;justify-content:center;align-items:center;height:100vh;font-family:"Montserrat", sans-serif;background:#e8eff3}.formContainer.svelte-2odk4l .formTitle.svelte-2odk4l{display:flex;flex-direction:column;justify-content:center;width:65vw;height:80vh;padding:32px 0;text-align:center}.formContainer.svelte-2odk4l h2.svelte-2odk4l{margin-bottom:10%;color:#ab41c0}.formContainer.svelte-2odk4l div.svelte-2odk4l,.formContainer.svelte-2odk4l textarea.svelte-2odk4l{color:#babecc;text-shadow:1px 1px 1px #fff}.formContainer.svelte-2odk4l button.svelte-2odk4l,.formContainer.svelte-2odk4l input.svelte-2odk4l,.formContainer.svelte-2odk4l textarea.svelte-2odk4l{border:0;outline:0;font-size:16px;border-radius:320px;padding:16px;background-color:#ebecf0;text-shadow:1px 1px 0 #fff;font-family:"Montserrat", sans-serif}.formContainer.svelte-2odk4l label.svelte-2odk4l,.formContainer.svelte-2odk4l textarea.svelte-2odk4l{display:block;margin-bottom:24px;width:100%}.formContainer.svelte-2odk4l input.svelte-2odk4l,.formContainer.svelte-2odk4l textarea.svelte-2odk4l{color:black;margin-right:8px;box-shadow:inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;width:100%;box-sizing:border-box;transition:all 0.2s ease-in-out;-moz-appearance:none;appearance:none;-webkit-appearance:none}.formContainer.svelte-2odk4l input.svelte-2odk4l:focus,.formContainer.svelte-2odk4l textarea.svelte-2odk4l:focus{box-shadow:inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff}.formContainer.svelte-2odk4l button.svelte-2odk4l{color:#61677c;font-weight:bold;box-shadow:-5px -5px 20px #fff, 5px 5px 20px #babecc;transition:all 0.2s ease-in-out;cursor:pointer;font-weight:600}.formContainer.svelte-2odk4l button.svelte-2odk4l:hover{box-shadow:-2px -2px 5px #fff, 2px 2px 5px #babecc}.formContainer.svelte-2odk4l button.svelte-2odk4l:focus{box-shadow:-2px -2px 5px #fff, 2px 2px 5px #babecc}.formContainer.svelte-2odk4l button.red.svelte-2odk4l{display:block;width:100%;color:#a30000;-webkit-animation:svelte-2odk4l-fade 2s infinite;animation:svelte-2odk4l-fade 2s infinite}@-webkit-keyframes svelte-2odk4l-fade{0%{color:#a30000}50%{color:#c5655a}100%{opacity:#a30000}}@keyframes svelte-2odk4l-fade{0%{color:#a30000}50%{color:#c5655a}100%{opacity:#a30000}}.formContainer.svelte-2odk4l button.svelte-2odk4l:active{box-shadow:inset 2px 2px 5px #babecc, inset -2px -2px 5px #fff}
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700,800&display=swap");@import url("https://fonts.googleapis.com/css?family=Poiret+One|Quicksand&display=swap");.svelte-v1k4q.svelte-v1k4q{margin:0;padding:0}.projectsContainer.svelte-v1k4q.svelte-v1k4q{display:flex;width:100vw;height:100vh;background:#e8eff3;flex-direction:row;flex-wrap:wrap;justify-content:center;padding-top:5%;font-family:"Quicksand", sans-serif}.projectsContainer.svelte-v1k4q a.svelte-v1k4q:link,.projectsContainer.svelte-v1k4q a.svelte-v1k4q:visited{text-decoration:none;color:black}.projectsContainer.svelte-v1k4q h1.svelte-v1k4q{font-size:20px}.projectsContainer.svelte-v1k4q .projectTile.svelte-v1k4q{display:flex;flex-direction:column;justify-content:center;align-items:center;width:250px;height:300px;margin:10px;border-radius:7px;background:linear-gradient(145deg, #f8ffff, #d1d7db);box-shadow:8px 8px 16px #c5cbcf, -8px -8px 16px #ffffff;font-family:"Quicksand", sans-serif}.projectsContainer.svelte-v1k4q .projectTile.svelte-v1k4q:hover{border-radius:9px;background:#e8eff3;box-shadow:inset 5px 5px 10px #c5cbcf, inset -5px -5px 10px #ffffff}.projectsContainer.svelte-v1k4q .projectTile:hover .projectBody.svelte-v1k4q{transition:all 0.2s ease-in-out;box-shadow:none}.projectsContainer.svelte-v1k4q .projectTile .projectTitle.svelte-v1k4q{display:flex;flex-direction:column;justify-content:center;height:50px;width:250px;text-align:center;color:black}.projectsContainer.svelte-v1k4q .projectTile .projectBody.svelte-v1k4q{display:flex;flex-direction:column;justify-content:space-evenly;align-items:center;text-align:center;height:150px;width:225px;margin-top:20%;border-radius:4px;background:#e8eff3;box-shadow:inset 5px 5px 10px #c5cbcf, inset -5px -5px 10px #ffffff}.projectsContainer.svelte-v1k4q .projectTile .projectBody p.svelte-v1k4q{padding:0 5px 0 5px}
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700,800&display=swap");@import url("https://fonts.googleapis.com/css?family=Poiret+One|Quicksand&display=swap");*{margin:0;padding:0}.homepageContainer{display:flex;flex-direction:column;justify-content:space-evenly;align-items:center;width:100vw;height:100vh;background:#00c7d3;font-family:"Montserrat";color:whitesmoke}.homepageContainer .row1{margin-top:10%;padding-right:30%;font-weight:500;z-index:10}.homepageContainer .name{padding:3% 10% 3% 0%;font-weight:700;color:#be025b;font-size:calc(30px + (100 - 16) * ((100vw - 300px) / (1600 - 300)))}.homepageContainer .dev{color:#d7f10d;font-style:italic;font-weight:700}.homepageContainer .row3{margin-bottom:10%;font-weight:500}.homepageContainer h1{font-size:calc(20px + (100 - 16) * ((100vw - 300px) / (1600 - 300)))}.homepageContainer .mainCloud{position:fixed;top:10%;-webkit-animation:animateCloud 20s linear infinite;animation:animateCloud 20s linear infinite;transform:scale(0.6);z-index:20}.homepageContainer .mainCloud .cloudBase{background:white;height:100px;width:300px;border-radius:50px;position:relative;top:120px;box-shadow:inset 5px -9px 5px rgba(225, 245, 253, 0.5), 0px 0px 10px 6px rgba(240, 240, 240, 0.7)}.homepageContainer .mainCloud .rounds{width:300px;border-radius:50%;position:absolute;bottom:-30px;box-shadow:0 0 25px 8px rgba(0, 0, 0, 0.2);transition:0.2s ease-in all}.homepageContainer .mainCloud .rounds:before,.homepageContainer .mainCloud .rounds:after{content:"";position:absolute;background:#fff}.homepageContainer .mainCloud .rounds:after{height:100px;width:100px;border-radius:50%;top:-180px;left:170px;box-shadow:inset 3px 2px 2px rgba(230, 230, 230, 0.5), 0px -10px 15px rgba(255, 255, 255, 0.4)}.homepageContainer .mainCloud .rounds:before{height:180px;width:180px;border-radius:50%;top:-220px;left:30px;box-shadow:inset 2px 4px 2px rgba(230, 230, 230, 0.5), 0px -10px 15px rgba(255, 255, 255, 0.4)}@-webkit-keyframes animateCloud{:global(0%){margin-left:-1000px}:global(100%){margin-left:100%}}@keyframes animateCloud{0%{margin-left:-1000px}100%{margin-left:100%}}.homepageContainer .sun{position:fixed;top:10%;right:5%;height:150px;width:150px;z-index:5}.homepageContainer .sun .sunrays{-webkit-animation:spin 15s linear infinite;animation:spin 15s linear infinite;box-shadow:0px 0px 100px #ffe77d;height:150px;width:150px}.homepageContainer .sun .circle{height:150px;width:150px;z-index:1;background:#ffe77d;position:absolute;border-radius:50%}.homepageContainer .sun .sunrays span{background:#ffdd4a;width:150px;height:150px;position:absolute}.homepageContainer .sun .sunrays span:first-child{transform:rotate(30deg)}.homepageContainer .sun .sunrays span:nth-child(2){transform:rotate(60deg)}.homepageContainer .sun .eyes{position:relative;top:50px;z-index:2}.homepageContainer .sun .eyes .left,.homepageContainer .sun .eyes .right{background:black;position:absolute;height:8px;width:8px;border-radius:50%;-webkit-animation:blink 2.5s linear infinite;animation:blink 2.5s linear infinite}.homepageContainer .sun .eyes .left{left:47%}.homepageContainer .sun .eyes .right{left:15%}@-webkit-keyframes spin{:global(0%){-webkit-transform:rotate(0deg)}:global(100%){-webkit-transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg)}}@-webkit-keyframes blink{:global(0%){height:8px;width:8px;border-radius:50%}:global(5%){height:1px;width:8px;border-radius:0}:global(10%){height:8px;width:8px;border-radius:50%}}@keyframes blink{0%{height:8px;width:8px;border-radius:50%}5%{height:1px;width:8px;border-radius:0}10%{height:8px;width:8px;border-radius:50%}}
ul.svelte-4fatyy{margin:0 0 1em 0;line-height:1.5}
.content.svelte-3nu9wu h2{font-size:1.4em;font-weight:500}.content.svelte-3nu9wu pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-3nu9wu pre code{background-color:transparent;padding:0}.content.svelte-3nu9wu ul{line-height:1.5}.content.svelte-3nu9wu li{margin:0 0 0.5em 0}
nav.svelte-a49afs{position:fixed;top:0;width:100vw;background:#e8eff3}ul.svelte-a49afs{margin:0;padding:0}ul.svelte-a49afs::after{content:"";display:block;clear:both}li.svelte-a49afs{display:block;float:left}.selected.svelte-a49afs{position:relative;display:inline-block}.selected.svelte-a49afs::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:#be025b;display:block;bottom:-1px}a.svelte-a49afs{text-decoration:none;padding:1em 0.5em;display:block;font-family:"Montserrat", sans-serif}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */