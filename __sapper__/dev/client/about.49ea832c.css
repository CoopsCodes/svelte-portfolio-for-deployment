@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700,800&display=swap");@import url("https://fonts.googleapis.com/css?family=Poiret+One|Quicksand&display=swap");.svelte-1c8va0s.svelte-1c8va0s{margin:0;padding:0;font-family:"Quicksand", sans-serif}canvas.svelte-1c8va0s.svelte-1c8va0s{width:100vw;height:100vh;background:#e8eff3;position:absolute;left:0;top:0;z-index:-1}body.svelte-1c8va0s.svelte-1c8va0s{display:grid;place-items:center;height:100vh;width:100vw}.main.svelte-1c8va0s.svelte-1c8va0s{display:flex;flex-direction:column;justify-content:space-evenly;align-items:flex-start;padding:5%;width:70vw;height:70vh;font-size:1em;background:#e8eff3c5;border-radius:20%}.main.svelte-1c8va0s p.svelte-1c8va0s{font-size:calc(12px + (20 - 16) * (100vw - 400px) / (800 - 350))}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */